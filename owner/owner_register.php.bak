<?php
#########################################################
# FILE: owner_register.php
#
# DESCRIPTION : This is the back end code when owner/admin
#               registers for the first time.
#
# WHO      WHEN     WHAT
#--------------------------------
#          01-08-15 Sets global session variable for user = owner.
#          01-22-15 Moved to Linux and changed accordingly.
#          03-15-15 Added salt and hash.
#
#########################################################

#require_once 'C:\\xampp\\htdocs\\xampp\\my_exercises\\senior_site_project\\common\\dependency.php';
require_once '../common/dependency.php';

vConnectDB( "baboom" );
session_start();
		
function iCheckIfOwnerEmailExists($SafeEmail)
{
	global $mysqli;
	
	$QueryResultSet = "SELECT count(*) AS row_exists
					   FROM login_table
					   WHERE email_address = '$SafeEmail'";
	$objGetResult = $mysqli->query( $QueryResultSet );
	
	if( $objGetResult ) #remember that even if there is no single row has returned, it will return an object which is non-zero.  
	{
		$anArray = $objGetResult->fetch_array( MYSQLI_ASSOC );
		
		$numof_rows = stripslashes($anArray['row_exists']);
if(DEBUG)
{		
	var_dump($objGetResult);
	echo "$QueryResultSet<br>";
	echo "From iCheckIfOwnerEmailExists():Numof_rows: $numof_rows<br>";
}	
		if( $numof_rows == 1 )
		{
			$Email_Exists = 1;
		}
		else
		{
			$Email_Exists = 0;
		}
		
		$objGetResult->free_result();
	}
	return $Email_Exists;
}

function vMakeSafeVariables(&$SafeFirstName,&$SafeLastName,&$SafeEmail,&$SafePWD)
{
	global $mysqli;
	
	$SafeFirstName = mysqli_real_escape_string( $mysqli, $_POST['owner_first_name']);
	$SafeLastName = mysqli_real_escape_string( $mysqli, $_POST['owner_last_name']);
	$SafeEmail = mysqli_real_escape_string( $mysqli, $_POST['owner_email']);
	$SafePWD = mysqli_real_escape_string( $mysqli, $_POST['owner_pwd']);
}

function vInsertIntoOwnerLoginTable( $SafeFirstName, $SafeLastName, $SafeEmail, $SafePWD )
{
	global $mysqli;
	
	$UserID = $SafeFirstName . $SafeLastName;
	
	$iOwnerExists = iCheckIfOwnerEmailExists($SafeEmail);
	
	#if this is the first claim.
	if( $iOwnerExists == 0 )
	{
		 
		#Obtain a cryption and save it in the DB.
		$salt = salt();

		#Hash a string that is comprised of password and a salt.
		#Save it as a password.  This will create a second level of security.
		$hash = getHash( $SafePWD, $salt );

		#user_id is also email address.
		$InsertCommand = "INSERT INTO login_table ( id, user_id, salt, password, email_address, type )
						  values ( NULL, '".$SafeEmail."', '".$salt."', '".$hash."', '".$SafeEmail."', 'O' )";
		
		$add_post_res = $mysqli->query($InsertCommand) or die($mysqli->error);
		popup( "Congratulations you have successfully registered!", OWNER_LOGIN_PAGE );

	}
	else
	#if this person is already registered.
	{
		popup( "You have already registere!", OWNER_LOGIN_PAGE );
	}
	
}

if(DEBUG)
{
	var_dump($_POST);
}

	if(( $_POST['owner_email'] != "" ) && ( $_POST['owner_pwd'] != "" ) &&( $_POST['owner_first_name'] != "" ) &&( $_POST['owner_last_name'] != "" ))
	{		
		$display_block = "";
		#setcookie( "user", "owner", time()+120, "/", "", 0 );              # This cookie will last 2 minute.
		#setcookie( "name", $SafeUserID, time()+120, "/", "", 0 );          # This cookie will last 2 minute.
		vMakeSafeVariables($SafeFirstName,$SafeLastName,$SafeEmail,$SafePWD);
		vInsertIntoOwnerLoginTable( $SafeFirstName, $SafeLastName, $SafeEmail, $SafePWD );
		$_SESSION['user'] = 'owner';
	}
	
	else
	{
		popup( "Please fill out the inputs.  Thanks!", OWNER_LOGIN_PAGE );

	}
?>
