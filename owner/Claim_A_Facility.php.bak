<?php
############################ 
# FILENAME:  Claim_A_Facility.php
#
# DATABASE used: login_table, rcfe, facility_owner
#
# WHO        WHEN          WHAT
# 			 01-07-15      Added logic to store primary owner to rcfe table.
#            01-12-15      Removed UpdateClaim() function.  We no longer carry
#                          that flag.  It becomes obsolete due to many to many
#                          relationship.
############################
#require_once 'C:\\xampp\\htdocs\\xampp\\my_exercises\\senior_site_project\\common\\dependency.php';
require_once '../common/dependency.php';

vConnectDB( "baboom" );

function vUpdatePrimaryOwnership( $SafeFacilityNumber, $Owner_Index )
{
	global $mysqli;
	$UpdateCommand = "UPDATE rcfe 
					  SET primary_owner = '$Owner_Index'
					  WHERE facility_number = $SafeFacilityNumber";
if(DEBUG)
{	
	echo $UpdateCommand;
}
	$add_post_res = $mysqli->query($UpdateCommand) or die($mysqli->error);

}


function vMakeSafeVariables( &$SafeFirstName,&$SafeLastName,&$SafeEmail,&$SafeCity,&$SafeZipcode,&$SafeFacilityNumber, &$SafeOwnerOfAdmin)
{
	###
	# Gets the user ID and password from the text input.
	###
	global $mysqli;
	
	$SafeFirstName = mysqli_real_escape_string( $mysqli, $_POST['firstname']);
	$SafeLastName = mysqli_real_escape_string( $mysqli, $_POST['lastname']);
	$SafeEmail = mysqli_real_escape_string( $mysqli, $_POST['email']);
	$SafeCity = mysqli_real_escape_string( $mysqli, $_POST['city']);
	$SafeZipcode = mysqli_real_escape_string( $mysqli, $_POST['zipcode']);
	$SafeFacilityNumber = mysqli_real_escape_string( $mysqli, $_POST['facility_number']);
	$SafeOwnerOrAdmin = mysqli_real_escape_string( $mysqli, $_POST['owner_or_admin']);
}

function objCheckIfARowExistsFromRCFE($SafeFacilityNumber,$SafeZipcode,$SafeCity )
{
	global $mysqli;
	
	$QueryResultSet = "SELECT id, primary_owner
					   FROM rcfe
					   WHERE facility_number = '$SafeFacilityNumber' AND
							 zipcode = '$SafeZipcode' AND 
							 city = '$SafeCity'";
	$objGetResult = $mysqli->query( $QueryResultSet );
		
if(DEBUG)
{		
	echo $QueryResultSet;
	var_dump($objGetResult);
}
	
	return $objGetResult;
}

###################################################
#  INPUT:  $Facility_Index - Unique ID of the facility table.
#          $Owner_Index - Unique ID of the owner table.
#  OUTPUT: SUCCESS, FAILURE
#  DESCRIPTION : This function plays most critical part of
#                the many to many relationship between facilities
#                owners.  It establishes relationship between
#                them.  The two columns of this table 
#                are composite primary keys.
#
#  WHO     WHEN      WHAT
#  ----    ------   -------
#          01-07-15  Added timestamp.
####################################################
function iInsertIntoFacility_Owner_table( $Facility_Index, $Owner_Index )
{
	global $mysqli;
	
	$InsertCommand = "INSERT INTO facility_owner 
					  values ( $Facility_Index, $Owner_Index, now())";
	
	
	$add_post_res = $mysqli->query($InsertCommand);
	
	#or die($mysqli->error);
	
if(DEBUG)
{		
	echo $InsertCommand;
	var_dump( $add_post_res );
}
	if( $add_post_res )
	{
if(DEBUG)
{		
		echo "Success";
}
		$status = SUCCESS;
	}
	else
	{
if(DEBUG)
{		
		echo "No Success: $mysqli->error";
}
		$status = FAILURE;
	}
	return $status;
}

function iGetOwnerID($EmailAddress)
{
	global $mysqli;
	
	$QueryResultSet = "SELECT id
					   FROM login_table
					   WHERE email_address = '$EmailAddress'";
					   
	$objGetResult = $mysqli->query( $QueryResultSet );
if(DEBUG)
{
	var_dump($objGetResult);
}	
	if( $objGetResult ) #remember that even if there is no single row has returned, it will return an object which is non-zero.  
	{
		$anArray = $objGetResult->fetch_array( MYSQLI_ASSOC );
		
		$ID = stripslashes($anArray['id']);
		$objGetResult->free_result();
	}
	else
	{
		$ID = 0;
	}
	
	return $ID;
	
}



////   MAIN PROGRAM STRTS HERE   

	$display_block = "";
	if(( $_POST['firstname'] != "" ) && ( $_POST['lastname'] != "" ) &&( $_POST['email'] != "" ) &&( $_POST['city'] != "" ) &&( $_POST['zipcode'] != "" ) && ( $_POST['facility_number'] != "" ) && ( $_POST['owner_or_admin'] != "" ))
	{		
		$display_block = "";
		#setcookie( "user", "owner", time()+120, "/", "", 0 );              # This cookie will last 2 minute.
		#setcookie( "name", $SafeUserID, time()+120, "/", "", 0 );          # This cookie will last 2 minute.
		vMakeSafeVariables($SafeFirstName,$SafeLastName,$SafeEmail,$SafeCity,$SafeZipcode,$SafeFacilityNumber, $SafeOwnerOrAdmin);
		
		####
		# If such a password exists given the input from the textfield, then proceed.
		####
		$objGetResult = objCheckIfARowExistsFromRCFE($SafeFacilityNumber,$SafeZipcode,$SafeCity );
		
		
		if( $objGetResult ) #remember that even if there is no single row has returned, it will return an object which is non-zero.  
		{
			$anArray = $objGetResult->fetch_array( MYSQLI_ASSOC );
			
			$Facility_Index = stripslashes($anArray['id']);
			$PrimaryOwner = stripslashes($anArray['primary_owner']);
if(DEBUG)
{
			echo "Primary Owner = $PrimaryOwner <br>";
			echo "Facility_Index = $Facility_Index<br>";
}
			if( $Facility_Index )
			{

if(DEBUG)
{
				echo "Such a facility exists<br>";
}
				$Owner_Index = iGetOwnerID($SafeEmail);
				
				#Retrieve Owner unique index.  Proceed only if there is a valid owner unique index.
				#Owner index is an auto-increment so it starts with 0.
				if( $Owner_Index != 0 )
				{
					$iInserted = iInsertIntoFacility_Owner_table( $Facility_Index, $Owner_Index );
					if( $iInserted == SUCCESS )
					{
						#echo "<h1>Congratulations! You have successfully claimes a new facility. </h1>";
						popup("Congratulations! You have successfully claimes a new facility",  FACILITY_CLAIM_PAGE );
						
						#The first one who claims the facility becomes the primary owner.
						#If the primary owner doesn't exist, store the primary owner to the table.
						if( $PrimaryOwner == 0 )
							vUpdatePrimaryOwnership( $SafeFacilityNumber, $Owner_Index );
					}
					else
					{
						#echo "<h1>You already have claimed this facility in the past. </h1>";
						popup( "You already have claimed this facility in the past.", FACILITY_CLAIM_PAGE);

					}
					
				}
				else
				{
					#$display_block = "<h1>Please register with us before claiming as an owner or administrator</h1><br>";
					popup( "Please register with us before claiming as an owner.", OWNER_LOGIN_PAGE);
				}
			}
			else
			{
				#echo "Such a facility doesn't exists<br>";
				popup( "Such a facility doesn't exists", FACILITY_CLAIM_PAGE);
				#$display_block = "<h1>Such a facility doesn't exists.  Please try again.</h1><br>";
			}
			
			$objGetResult->free_result();
		}
		else 
		{
			#echo "Such a facility doesn't exists<br>";
			popup(  "Such a facility doesn't exists", FACILITY_CLAIM_PAGE);
			$display_block = "<h1>Such a facility doesn't exists.  Please try again.</h1><br>";
		}
	}
	#If there is a missing field, send a messssge along with a clean form.
	else
	{
		#echo "<h1>You must fill in every field</h1>";
		popup( "You must fill in every field", FACILITY_CLAIM_PAGE);
		#vDisplay_Claim_A_Facility_window();
	}
	$mysqli->close();
/*}*/
?>
<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="css/facility.css">
<?php include( '../common/header.php' );?> <!--worked -->
</head>
<body>
	<div class="headcontainer">
		<?php include( '../common/owner_navigation.php' );?> 
	</div>
	<div class="CLAIM_A_FACILITY">
		<?php echo $display_block; ?>
	</div>
	<?php include ( '../common/owner_trailer' ); ?>
</body>
</html>
